[{"/Users/ebenezerodubanjo/Documents/fullStackOpen/part2/rendering-collections/src/index.js":"1","/Users/ebenezerodubanjo/Documents/fullStackOpen/part2/rendering-collections/src/App.js":"2","/Users/ebenezerodubanjo/Documents/fullStackOpen/part2/rendering-collections/src/components/AddPersonFunctionality.js":"3","/Users/ebenezerodubanjo/Documents/fullStackOpen/part2/rendering-collections/src/components/services/backend.js":"4","/Users/ebenezerodubanjo/Documents/fullStackOpen/part2/rendering-collections/src/components/Notification.js":"5"},{"size":168,"mtime":1618302874590,"results":"6","hashOfConfig":"7"},{"size":2638,"mtime":1618303253717,"results":"8","hashOfConfig":"7"},{"size":2132,"mtime":1618302874588,"results":"9","hashOfConfig":"7"},{"size":509,"mtime":1618303253717,"results":"10","hashOfConfig":"7"},{"size":372,"mtime":1618302874589,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"1b1awvg",{"filePath":"15","messages":"16","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":1,"source":"17","usedDeprecatedRules":"14"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"20","usedDeprecatedRules":"14"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"/Users/ebenezerodubanjo/Documents/fullStackOpen/part2/rendering-collections/src/index.js",[],["26","27"],"/Users/ebenezerodubanjo/Documents/fullStackOpen/part2/rendering-collections/src/App.js",["28","29"],"import React, { useState, useEffect } from 'react'\nimport AddPersonFunctionality from './components/AddPersonFunctionality';\nimport axios from 'axios'\nimport backendServices from './components/services/backend';\nimport Notification from './components/Notification';\n\nfunction filterByValue(array, string) { return array.filter(o => { return Object.keys(o).some(k => { if (typeof o[k] === 'string') return o[k].toLowerCase().includes(string.toLowerCase()); }); }); }\n//EXERCISE 2.15\n\nconst App = () => {\n  // const [notes, setNotes] = useState([])\n  const [persons, setPersons] = useState([])\n  const [filterTerm, setNewfilterTerm] = useState('')\n  const [deletedPerson, setDeletedPerson] = useState([])\n  const [editedPerson, setEditedPerson] = useState('')\n  const [message, setMessage] = useState(null)\n  const [error, setError] = useState(false)\n\n  const hook = () => {\n    console.log('effect')\n    axios\n      .get('http://localhost:3001/api/persons')\n      .then(response => {\n        console.log('promise fulfilled')\n        setPersons(response.data)\n      })\n  }\n\n  useEffect(hook, [deletedPerson, editedPerson])\n  console.log('render', persons.length, 'persons')\n\n  const handleFilterChange = (event) => {\n    setNewfilterTerm(event.target.value)\n    console.log(filterByValue(persons, filterTerm))\n  }\n\n  const deleteUser = (id, name) => {\n    if (window.confirm(`Delete ${name}?`)) {\n      backendServices.\n        deletePersonServerCall(id)\n        .then(response => {\n\n          setMessage(`${name} was removed from server`)\n          setTimeout(() => {\n            setMessage(null)\n            setDeletedPerson(name)\n          }, 5000)\n\n\n        })\n        .catch(error => {\n          setError(true)\n          setDeletedPerson('deletedAlready')\n          setMessage(`${name} was already removed from server`)\n          setTimeout(() => {\n            setMessage(null)\n            setError(false)\n          }, 5000)\n        })\n    }\n  }\n\n\n\n  return (\n    <div>\n      <Notification error={error} message={message} />\n      <h2>Phonebook</h2>\n      <form >\n        <div> filter shown with: <input value={filterTerm} onChange={handleFilterChange} /> </div>\n      </form>\n\n      <h2>add a new</h2>\n      <AddPersonFunctionality setMessage={setMessage} persons={persons} setPersons={setPersons} editedPerson={editedPerson} setEditedPerson={setEditedPerson} />\n\n      <h2>Numbers</h2>\n      {filterByValue(persons, filterTerm).map(person => <div key={person.id}>{person.name} {person.number} <button type=\"button\" onClick={() => { deleteUser(person.id, person.name) }}>delete</button>  </div>)}\n\n    </div>\n  )\n}\n\nexport default App","/Users/ebenezerodubanjo/Documents/fullStackOpen/part2/rendering-collections/src/components/AddPersonFunctionality.js",["30","31"],"import React, { useEffect, useState } from 'react'\nimport backendServices from './services/backend';\n\nconst AddPersonFunctionality = (props) => {\n\n  const [newName, setNewName] = useState('')\n  const [newNumber, setNewNumber] = useState('')\n\n  const handleNameChange = (event) => {\n    setNewName(event.target.value)\n  }\n  const handleNumberChange = (event) => {\n    setNewNumber(event.target.value)\n  }\n\n  const editPerson = user => {\n    if (window.confirm(`${user.name} is already added to phonebook, replace the old number with a new one`)) {\n      backendServices\n      .editPersonServerCall(user, newNumber)\n      .then(response => {\n        props.setEditedPerson(`${user.name} + ${newNumber}`)\n        console.log(response)\n        props.setMessage(`${user.name} number was changed!`)\n        setTimeout(() => {\n          props.setMessage(null)\n        }, 5000)\n      })\n    }\n\n  }\n\n  const addPerson = (event) => {\n    event.preventDefault()\n    // if (props.persons.some(e => e.name === newName)) { alert(`${newName} is already added to phonebook`); setNewName(''); return }\n    if (props.persons.some(e => e.name === newName)) { editPerson(props.persons.find(e => e.name === newName), newNumber); return }\n\n    if (newName == '') { alert(`You can not add a blank name to phonebook`); setNewName(''); return }\n\n    let newObject = {\n      name: newName,\n      number: newNumber,\n      id: props.persons.length + 1,\n    }\n    backendServices.addPersonServerCall(newObject)\n      .then(response => {\n        console.log(response)\n        props.setMessage(`${newObject.name} was added to the phonebook!`)\n        setTimeout(() => {\n          props.setMessage(null)\n        }, 5000)\n      })\n\n\n    props.setPersons(props.persons.concat(newObject))\n\n    setNewName('')\n    setNewNumber('')\n  }\n\n\n  return (\n    <form onSubmit={addPerson}>\n\n      <div> name: <input value={newName} onChange={handleNameChange} /> </div>\n      <div>number: <input value={newNumber} onChange={handleNumberChange} /></div>\n\n      <div>\n        <button type=\"submit\">add</button>\n      </div>\n    </form>\n  )\n\n}\n\nexport default AddPersonFunctionality","/Users/ebenezerodubanjo/Documents/fullStackOpen/part2/rendering-collections/src/components/services/backend.js",["32"],"import axios from 'axios';\nconst baseUrl = 'http://localhost:3001/api/persons'\n\nconst addPersonServerCall = (object) => {\n  return( \n    axios\n    .post(baseUrl, object)\n  )\n}\n\nconst deletePersonServerCall = (id) => {\n  return( \n    axios\n    .delete(`${baseUrl}/${id}`)\n  )\n}\n\nconst editPersonServerCall = (user, number) => {\n  return( \n    axios\n    .put(`${baseUrl}/${user.id}`, {name: user.name, number: number})\n  )\n\n}\n\nexport default { addPersonServerCall, deletePersonServerCall, editPersonServerCall }","/Users/ebenezerodubanjo/Documents/fullStackOpen/part2/rendering-collections/src/components/Notification.js",[],{"ruleId":"33","replacedBy":"34"},{"ruleId":"35","replacedBy":"36"},{"ruleId":"37","severity":1,"message":"38","line":7,"column":97,"nodeType":"39","messageId":"40","endLine":7,"endColumn":99},{"ruleId":"41","severity":1,"message":"42","line":39,"column":22,"nodeType":"43","messageId":"44","endLine":39,"endColumn":23,"fix":"45"},{"ruleId":"46","severity":1,"message":"47","line":1,"column":17,"nodeType":"48","messageId":"49","endLine":1,"endColumn":26},{"ruleId":"50","severity":1,"message":"51","line":37,"column":17,"nodeType":"52","messageId":"53","endLine":37,"endColumn":19},{"ruleId":"54","severity":1,"message":"55","line":26,"column":1,"nodeType":"56","endLine":26,"endColumn":85},"no-native-reassign",["57"],"no-negated-in-lhs",["58"],"array-callback-return","Array.prototype.some() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","dot-location","Expected dot to be on same line as property.","MemberExpression","expectedDotBeforeProperty",{"range":"59","text":"60"},"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","no-global-assign","no-unsafe-negation",[1416,1426],"\n        ."]