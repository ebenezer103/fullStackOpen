[{"/Users/ebenezerodubanjo/Documents/fullStackOpen/part2/rendering-collections/src/index.js":"1","/Users/ebenezerodubanjo/Documents/fullStackOpen/part2/rendering-collections/src/App.js":"2"},{"size":147,"mtime":1618304855245,"results":"3","hashOfConfig":"4"},{"size":3252,"mtime":1618304855240,"results":"5","hashOfConfig":"4"},{"filePath":"6","messages":"7","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1b1awvg",{"filePath":"8","messages":"9","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":1,"source":"10","usedDeprecatedRules":"11"},"/Users/ebenezerodubanjo/Documents/fullStackOpen/part2/rendering-collections/src/index.js",[],"/Users/ebenezerodubanjo/Documents/fullStackOpen/part2/rendering-collections/src/App.js",["12","13"],"import React, { useState, useEffect } from 'react'\nimport AddPersonFunctionality from './components/AddPersonFunctionality';\nimport axios from 'axios'\nimport backendServices from './components/services/backend';\nimport Notification from './components/Notification';\n\nfunction filterByValue(array, string) { return array.filter(o => { return Object.keys(o).some(k => { if (typeof o[k] === 'string') return o[k].toLowerCase().includes(string.toLowerCase()); }); }); }\n//EXERCISE 2.15\n\nconst App = () => {\n  // const [notes, setNotes] = useState([])\n  const [persons, setPersons] = useState([])\n  const [filterTerm, setNewfilterTerm] = useState('')\n  const [deletedPerson, setDeletedPerson] = useState([])\n  const [editedPerson, setEditedPerson] = useState('')\n  const [message, setMessage] = useState(null)\n  const [error, setError] = useState(false)\n\n  const hook = () => {\n    console.log('effect')\n    axios\n      .get('http://localhost:3001/api/persons')\n      .then(response => {\n        console.log('promise fulfilled')\n        setPersons(response.data)\n      })\n  }\n\n  useEffect(hook, [deletedPerson, editedPerson])\n  console.log('render', persons.length, 'persons')\n\n  const handleFilterChange = (event) => {\n    setNewfilterTerm(event.target.value)\n    console.log(filterByValue(persons, filterTerm))\n  }\n\n  const deleteUser = (id, name) => {\n    if (window.confirm(`Delete ${name}?`)) {\n      backendServices.\n        deletePersonServerCall(id)\n        .then(response => {\n\n          setMessage(`${name} was removed from server`)\n          setTimeout(() => {\n            setMessage(null)\n            setDeletedPerson(name)\n          }, 5000)\n\n\n        })\n        .catch(error => {\n          setError(true)\n          setDeletedPerson('deletedAlready')\n          setMessage(`${name} was already removed from server`)\n          setTimeout(() => {\n            setMessage(null)\n            setError(false)\n          }, 5000)\n        })\n    }\n  }\n\n\n\n  return (\n    <div>\n      <Notification error={error} message={message} />\n      <h2>Phonebook</h2>\n      <form >\n        <div> filter shown with: <input value={filterTerm} onChange={handleFilterChange} /> </div>\n      </form>\n\n      <h2>add a new</h2>\n      <AddPersonFunctionality setMessage={setMessage} persons={persons} setPersons={setPersons} editedPerson={editedPerson} setEditedPerson={setEditedPerson} />\n\n      <h2>Numbers</h2>\n      {filterByValue(persons, filterTerm).map(person => <div key={person.id}>{person.name} {person.number} <button type=\"button\" onClick={() => { deleteUser(person.id, person.name) }}>delete</button>  </div>)}\n\n    </div>\n  )\n}\n\nexport default App",["14","15"],{"ruleId":"16","severity":1,"message":"17","line":7,"column":97,"nodeType":"18","messageId":"19","endLine":7,"endColumn":99},{"ruleId":"20","severity":1,"message":"21","line":39,"column":22,"nodeType":"22","messageId":"23","endLine":39,"endColumn":23,"fix":"24"},{"ruleId":"25","replacedBy":"26"},{"ruleId":"27","replacedBy":"28"},"array-callback-return","Array.prototype.some() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","dot-location","Expected dot to be on same line as property.","MemberExpression","expectedDotBeforeProperty",{"range":"29","text":"30"},"no-native-reassign",["31"],"no-negated-in-lhs",["32"],[1416,1426],"\n        .","no-global-assign","no-unsafe-negation"]