[{"/Users/ebenezerodubanjo/Documents/fullStackOpen/part2/rendering-collections/src/index.js":"1","/Users/ebenezerodubanjo/Documents/fullStackOpen/part2/rendering-collections/src/App.js":"2","/Users/ebenezerodubanjo/Documents/fullStackOpen/part2/rendering-collections/src/components/Notification.js":"3","/Users/ebenezerodubanjo/Documents/fullStackOpen/part2/rendering-collections/src/components/AddPersonFunctionality.js":"4","/Users/ebenezerodubanjo/Documents/fullStackOpen/part2/rendering-collections/src/components/services/backend.js":"5"},{"size":168,"mtime":1618305001962,"results":"6","hashOfConfig":"7"},{"size":2638,"mtime":1618305001961,"results":"8","hashOfConfig":"7"},{"size":372,"mtime":1618305001961,"results":"9","hashOfConfig":"7"},{"size":2132,"mtime":1618305001961,"results":"10","hashOfConfig":"7"},{"size":509,"mtime":1618305001962,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"1b1awvg",{"filePath":"15","messages":"16","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":1,"source":"17","usedDeprecatedRules":"14"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23","usedDeprecatedRules":"14"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"26","usedDeprecatedRules":"14"},"/Users/ebenezerodubanjo/Documents/fullStackOpen/part2/rendering-collections/src/index.js",[],["27","28"],"/Users/ebenezerodubanjo/Documents/fullStackOpen/part2/rendering-collections/src/App.js",["29","30"],"import React, { useState, useEffect } from 'react'\nimport axios from 'axios'\n\nfunction filterByValue(array, string) { return array.filter(o => { return Object.keys(o).some(k => { if (typeof o[k] === 'string') return o[k].toLowerCase().includes(string.toLowerCase()); }); }); }\n\nconst App = () => {\n  const [countries, setCountriesFound] = useState([])\n  const [countryWeather, setcountryWeather] = useState()\n  const [filterTerm, setNewfilterTerm] = useState('')\n  const [countryDetailedBoolean, setCountryDetailedBoolean] = useState(false)\n  const [countryWeatherBoolean, setCountryWeatherBoolean] = useState(false)\n  const [globalCountry, setGlobalCountry] = useState('')\n  const api_key = process.env.REACT_APP_API_KEY\n\n  const weatherHook = () => {\n    if (globalCountry) {\n      axios\n        .get(`http://api.weatherstack.com/current?access_key=${api_key}&query=${globalCountry.name}`)\n        .then(response => {\n          setcountryWeather(response.data)\n          setCountryWeatherBoolean(true)\n        })\n    }\n  }\n\n  const hook = () => {\n    if (!filterTerm) {\n      return\n    }\n    axios\n      .get(`https://restcountries.eu/rest/v2/name/${filterTerm}`)\n      .then(response => {\n        // console.log('promise fulfilled')\n        // console.log(response.data.length)\n\n        if (response.data.length > 10) {\n          console.log(\"Ebenezer\")\n        } else {\n          setCountriesFound(response.data)\n        }\n\n      })\n  }\n\n  useEffect(hook, [filterTerm])\n  useEffect(weatherHook, [globalCountry])\n  // console.log('render', countries.length, 'countries')\n\n  const handleFilterChange = (event) => {\n    setNewfilterTerm(event.target.value)\n    // console.log(filterByValue(countries, filterTerm))\n\n  }\n\n  const showDetails = (country) => {\n    setCountryDetailedBoolean(true);\n    setGlobalCountry(country)\n  }\n\n  const CountryDetailed = (country) => {\n    return (\n      <div style={{ display: countryDetailedBoolean ? \"block\" : \"none\" }} >\n        <h1> {globalCountry.name} </h1>\n        <p>capital: {globalCountry.capital} </p>\n        <p>population: {globalCountry.population} </p>\n        <h3> languages </h3>\n        {globalCountry && globalCountry.languages.map((language) => <li key={language.iso639_2} > {language.name} </li>)}\n        <img src={globalCountry.flag} width=\"200\" height=\"200\" alt=\"\" />\n      </div >\n    )\n  }\n\n  const CountryWeatherDetailed = (country) => {\n    return (\n      <div style={{ display: countryWeatherBoolean ? \"block\" : \"none\" }} >\n        <h2> Weather in {countryWeather && countryWeather.location.name}</h2>\n        <h4> temperature: {countryWeather && countryWeather.current.temperature} </h4>\n        <img />\n        <h4> wind: {countryWeather && countryWeather.current.wind_speed} mph direction {countryWeather && countryWeather.current.wind_dir} </h4>\n      </div >\n    )\n  }\n\n\n  return (\n    <div>\n      <form >\n        <div> find countries <input value={filterTerm} onChange={handleFilterChange} /> </div>\n      </form>\n      {filterByValue(countries, filterTerm).map(country => <div key={country.cioc}> {country.name} <button onClick={() => showDetails(country)}> show </button> </div>)}\n      < CountryDetailed />\n      < CountryWeatherDetailed />\n    </div>\n  )\n}\n\nexport default App","/Users/ebenezerodubanjo/Documents/fullStackOpen/part2/rendering-collections/src/components/Notification.js",[],["31","32"],"/Users/ebenezerodubanjo/Documents/fullStackOpen/part2/rendering-collections/src/components/AddPersonFunctionality.js",["33","34"],"import React, { useEffect, useState } from 'react'\nimport backendServices from './services/backend';\n\nconst AddPersonFunctionality = (props) => {\n\n  const [newName, setNewName] = useState('')\n  const [newNumber, setNewNumber] = useState('')\n\n  const handleNameChange = (event) => {\n    setNewName(event.target.value)\n  }\n  const handleNumberChange = (event) => {\n    setNewNumber(event.target.value)\n  }\n\n  const editPerson = user => {\n    if (window.confirm(`${user.name} is already added to phonebook, replace the old number with a new one`)) {\n      backendServices\n      .editPersonServerCall(user, newNumber)\n      .then(response => {\n        props.setEditedPerson(`${user.name} + ${newNumber}`)\n        console.log(response)\n        props.setMessage(`${user.name} number was changed!`)\n        setTimeout(() => {\n          props.setMessage(null)\n        }, 5000)\n      })\n    }\n\n  }\n\n  const addPerson = (event) => {\n    event.preventDefault()\n    // if (props.persons.some(e => e.name === newName)) { alert(`${newName} is already added to phonebook`); setNewName(''); return }\n    if (props.persons.some(e => e.name === newName)) { editPerson(props.persons.find(e => e.name === newName), newNumber); return }\n\n    if (newName == '') { alert(`You can not add a blank name to phonebook`); setNewName(''); return }\n\n    let newObject = {\n      name: newName,\n      number: newNumber,\n      id: props.persons.length + 1,\n    }\n    backendServices.addPersonServerCall(newObject)\n      .then(response => {\n        console.log(response)\n        props.setMessage(`${newObject.name} was added to the phonebook!`)\n        setTimeout(() => {\n          props.setMessage(null)\n        }, 5000)\n      })\n\n\n    props.setPersons(props.persons.concat(newObject))\n\n    setNewName('')\n    setNewNumber('')\n  }\n\n\n  return (\n    <form onSubmit={addPerson}>\n\n      <div> name: <input value={newName} onChange={handleNameChange} /> </div>\n      <div>number: <input value={newNumber} onChange={handleNumberChange} /></div>\n\n      <div>\n        <button type=\"submit\">add</button>\n      </div>\n    </form>\n  )\n\n}\n\nexport default AddPersonFunctionality","/Users/ebenezerodubanjo/Documents/fullStackOpen/part2/rendering-collections/src/components/services/backend.js",["35"],"import axios from 'axios';\nconst baseUrl = 'http://localhost:3001/api/persons'\n\nconst addPersonServerCall = (object) => {\n  return( \n    axios\n    .post(baseUrl, object)\n  )\n}\n\nconst deletePersonServerCall = (id) => {\n  return( \n    axios\n    .delete(`${baseUrl}/${id}`)\n  )\n}\n\nconst editPersonServerCall = (user, number) => {\n  return( \n    axios\n    .put(`${baseUrl}/${user.id}`, {name: user.name, number: number})\n  )\n\n}\n\nexport default { addPersonServerCall, deletePersonServerCall, editPersonServerCall }",{"ruleId":"36","replacedBy":"37"},{"ruleId":"38","replacedBy":"39"},{"ruleId":"40","severity":1,"message":"41","line":7,"column":97,"nodeType":"42","messageId":"43","endLine":7,"endColumn":99},{"ruleId":"44","severity":1,"message":"45","line":39,"column":22,"nodeType":"46","messageId":"47","endLine":39,"endColumn":23,"fix":"48"},{"ruleId":"36","replacedBy":"49"},{"ruleId":"38","replacedBy":"50"},{"ruleId":"51","severity":1,"message":"52","line":1,"column":17,"nodeType":"53","messageId":"54","endLine":1,"endColumn":26},{"ruleId":"55","severity":1,"message":"56","line":37,"column":17,"nodeType":"57","messageId":"58","endLine":37,"endColumn":19},{"ruleId":"59","severity":1,"message":"60","line":26,"column":1,"nodeType":"61","endLine":26,"endColumn":85},"no-native-reassign",["62"],"no-negated-in-lhs",["63"],"array-callback-return","Array.prototype.some() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","dot-location","Expected dot to be on same line as property.","MemberExpression","expectedDotBeforeProperty",{"range":"64","text":"65"},["62"],["63"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","no-global-assign","no-unsafe-negation",[1416,1426],"\n        ."]