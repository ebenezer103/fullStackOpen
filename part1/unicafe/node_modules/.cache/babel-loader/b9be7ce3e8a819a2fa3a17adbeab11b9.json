{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/ebenezerodubanjo/Documents/fullStackOpen/part1/src/index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport ReactDOM from 'react-dom';\n\nconst App = () => {\n  _s();\n\n  // save clicks of each button to its own state\n  const [good, setGood] = useState(0);\n  const [neutral, setNeutral] = useState(0);\n  const [bad, setBad] = useState(0);\n\n  const incrementValue = (newValue, eventHandler) => {\n    NewFooterStats = /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [props.title, \" \", props.value]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 22\n    }, this);\n    eventHandler(newValue + 1);\n  };\n\n  const all = good + bad + neutral;\n  const total = good - bad;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"give feedback\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      title: \"good\",\n      handleClick: () => incrementValue(good, setGood)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      title: \"neutral\",\n      handleClick: () => incrementValue(neutral, setNeutral)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      title: \"bad\",\n      handleClick: () => incrementValue(bad, setBad)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"statistics\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(FooterStats, {\n      title: \"good\",\n      stats: good\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(FooterStats, {\n      title: \"neutral\",\n      stats: neutral\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(FooterStats, {\n      title: \"bad\",\n      stats: bad\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(NewFooterStats, {\n      title: \"all\",\n      value: all\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(NewFooterStats, {\n      title: \"average\",\n      value: total / all\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(NewFooterStats, {\n      title: \"positive\",\n      value: good / all * 100 + \"%\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"eScCFcZxMV7EVTyq8/QmtvFilbs=\");\n\n_c = App;\n\nconst Button = props => /*#__PURE__*/_jsxDEV(\"button\", {\n  onClick: props.handleClick,\n  children: props.title\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 41,\n  columnNumber: 3\n}, this);\n\n_c2 = Button;\n\nconst FooterStats = props => /*#__PURE__*/_jsxDEV(\"p\", {\n  children: [props.title, \" \", props.stats]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 47,\n  columnNumber: 3\n}, this);\n\n_c3 = FooterStats;\n\nconst NewFooterStats = props => /*#__PURE__*/_jsxDEV(\"p\", {\n  children: [props.title, \" \", props.value]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 51,\n  columnNumber: 1\n}, this);\n\n_c4 = NewFooterStats;\nReactDOM.render( /*#__PURE__*/_jsxDEV(App, {}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 54,\n  columnNumber: 17\n}, this), document.getElementById('root'));\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"App\");\n$RefreshReg$(_c2, \"Button\");\n$RefreshReg$(_c3, \"FooterStats\");\n$RefreshReg$(_c4, \"NewFooterStats\");","map":{"version":3,"sources":["/Users/ebenezerodubanjo/Documents/fullStackOpen/part1/src/index.js"],"names":["React","useState","ReactDOM","App","good","setGood","neutral","setNeutral","bad","setBad","incrementValue","newValue","eventHandler","NewFooterStats","props","title","value","all","total","Button","handleClick","FooterStats","stats","render","document","getElementById"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\nimport ReactDOM from 'react-dom'\n\nconst App = () => {\n  // save clicks of each button to its own state\n  const [good, setGood] = useState(0)\n  const [neutral, setNeutral] = useState(0)\n  const [bad, setBad] = useState(0)\n\n  const incrementValue = (newValue, eventHandler) => {\n    NewFooterStats = <p>{props.title} {props.value}</p>\n    eventHandler(newValue + 1)\n  };\n\n  const all = (good + bad + neutral);\n  const total = (good - bad);\n\n  return (\n    <div>\n      <h1>give feedback</h1>\n      <Button title={\"good\"} handleClick={() => incrementValue(good, setGood)}/>\n\n      <Button title={\"neutral\"} handleClick={() => incrementValue(neutral, setNeutral)}/>\n\n      <Button title={\"bad\"} handleClick={() =>  incrementValue(bad, setBad)}/>\n      \n      <h1>statistics</h1>\n      <FooterStats title=\"good\" stats={good} />\n      <FooterStats title=\"neutral\" stats={neutral} />\n      <FooterStats title=\"bad\" stats={bad} />\n      \n      <NewFooterStats title=\"all\" value={ all } />\n      <NewFooterStats title=\"average\" value={ total / all } />\n      <NewFooterStats title=\"positive\" value= { (good / all) * 100 + \"%\" } />\n\n    </div>\n  )\n}\n\nconst Button = (props) => (\n  <button onClick={props.handleClick}>\n    {props.title}\n    </button>\n) \n\nconst FooterStats = (props) => (\n  <p>{props.title} {props.stats}</p>\n)\n\nconst NewFooterStats = (props) => (\n<p>{props.title} {props.value}</p>\n)\n\nReactDOM.render(<App />, \n  document.getElementById('root')\n)"]},"metadata":{},"sourceType":"module"}