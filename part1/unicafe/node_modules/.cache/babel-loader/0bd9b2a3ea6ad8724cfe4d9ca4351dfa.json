{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/ebenezerodubanjo/Documents/fullStackOpen/part1/src/index.js\",\n    _s = $RefreshSig$();\n\nimport { render } from '@testing-library/react';\nimport React, { useState } from 'react';\nimport ReactDOM from 'react-dom';\n\nconst App = () => {\n  _s();\n\n  // save clicks of each button to its own state\n  const [good, setGood] = useState(0);\n  const [neutral, setNeutral] = useState(0);\n  const [bad, setBad] = useState(0);\n\n  const incrementValue = (newValue, eventHandler) => {\n    eventHandler(newValue + 1);\n  };\n\n  const all = good + bad + neutral;\n  const total = good - bad;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"give feedback\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"statistics\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(FooterStats, {\n      good: good,\n      neutral: neutral,\n      bad: bad\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(NewFooterStats, {\n      title: \"all\",\n      value: all\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(NewFooterStats, {\n      title: \"average\",\n      value: all ? total / all + \"\" : null\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(NewFooterStats, {\n      title: \"positive\",\n      value: all ? good / all * 100 + \"%\" : null\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"eScCFcZxMV7EVTyq8/QmtvFilbs=\");\n\n_c = App;\n\nconst FooterStats = props => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(FooterStat, {\n      title: \"good\",\n      stats: props.good\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(FooterStat, {\n      title: \"neutral\",\n      stats: props.neutral\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(FooterStat, {\n      title: \"bad\",\n      stats: props.bad\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n};\n\n_c2 = FooterStats;\n\nconst Buttons = props => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Button, {\n      title: \"good\",\n      handleClick: () => incrementValue(good, setGood)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      title: \"neutral\",\n      handleClick: () => incrementValue(neutral, setNeutral)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      title: \"bad\",\n      handleClick: () => incrementValue(bad, setBad)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 3\n  }, this);\n};\n\n_c3 = Buttons;\n\nconst Button = props => /*#__PURE__*/_jsxDEV(\"button\", {\n  onClick: props.handleClick,\n  children: props.title\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 55,\n  columnNumber: 3\n}, this);\n\n_c4 = Button;\n\nconst FooterStat = props => /*#__PURE__*/_jsxDEV(\"p\", {\n  children: [props.title, \" \", props.stats]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 61,\n  columnNumber: 3\n}, this);\n\n_c5 = FooterStat;\n\nconst NewFooterStats = props => {\n  if (props.value === 0) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No feedback given\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this);\n  } else if (props.value === null) {\n    return null;\n  } else {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [props.title, \" \", props.value]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this);\n  }\n};\n\n_c6 = NewFooterStats;\nReactDOM.render( /*#__PURE__*/_jsxDEV(App, {}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 79,\n  columnNumber: 17\n}, this), document.getElementById('root'));\n\nvar _c, _c2, _c3, _c4, _c5, _c6;\n\n$RefreshReg$(_c, \"App\");\n$RefreshReg$(_c2, \"FooterStats\");\n$RefreshReg$(_c3, \"Buttons\");\n$RefreshReg$(_c4, \"Button\");\n$RefreshReg$(_c5, \"FooterStat\");\n$RefreshReg$(_c6, \"NewFooterStats\");","map":{"version":3,"sources":["/Users/ebenezerodubanjo/Documents/fullStackOpen/part1/src/index.js"],"names":["render","React","useState","ReactDOM","App","good","setGood","neutral","setNeutral","bad","setBad","incrementValue","newValue","eventHandler","all","total","FooterStats","props","Buttons","Button","handleClick","title","FooterStat","stats","NewFooterStats","value","document","getElementById"],"mappings":"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","sourcesContent":["import { render } from '@testing-library/react'\nimport React, { useState } from 'react'\nimport ReactDOM from 'react-dom'\n\nconst App = () => {\n  // save clicks of each button to its own state\n  const [good, setGood] = useState(0)\n  const [neutral, setNeutral] = useState(0)\n  const [bad, setBad] = useState(0)\n\n  const incrementValue = (newValue, eventHandler) => {\n\n    eventHandler(newValue + 1)\n  };\n\n  const all = (good + bad + neutral);\n  const total = (good - bad);\n\n  return (\n    <div>\n      <h1>give feedback</h1>\n\n      <h1>statistics</h1>\n      <FooterStats good={good} neutral={neutral} bad={bad} />\n\n      <NewFooterStats title=\"all\" value={all} />\n      <NewFooterStats title=\"average\" value={(all) ? (total / all) + \"\" : null} />\n\n      <NewFooterStats title=\"positive\" value={(all) ? (good / all) * 100 + \"%\" : null} />\n\n    </div>\n  )\n}\n\nconst FooterStats = (props) => {\n  return (\n    <div>\n      <FooterStat title=\"good\" stats={props.good} />\n      <FooterStat title=\"neutral\" stats={props.neutral} />\n      <FooterStat title=\"bad\" stats={props.bad} />\n    </div>\n  )\n}\n\nconst Buttons = (props) => {\n  return (\n  <div>\n    <Button title={\"good\"} handleClick={() => incrementValue(good, setGood)} />\n    <Button title={\"neutral\"} handleClick={() => incrementValue(neutral, setNeutral)} />\n    <Button title={\"bad\"} handleClick={() => incrementValue(bad, setBad)} />\n  </div>)\n}\n\nconst Button = (props) => (\n  <button onClick={props.handleClick}>\n    {props.title}\n  </button>\n)\n\nconst FooterStat = (props) => (\n  <p>{props.title} {props.stats}</p>\n)\n\nconst NewFooterStats = (props) => {\n  if (props.value === 0) {\n    return (\n      <p>No feedback given</p>\n    )\n  } else if (props.value === null) {\n    return (null)\n  }\n  else {\n    return (\n      <p>{props.title} {props.value}</p>\n    )\n  }\n}\n\nReactDOM.render(<App />,\n  document.getElementById('root')\n)\n"]},"metadata":{},"sourceType":"module"}