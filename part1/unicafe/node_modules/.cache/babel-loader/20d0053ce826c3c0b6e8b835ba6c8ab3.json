{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/ebenezerodubanjo/Documents/fullStackOpen/part1/src/index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport ReactDOM from 'react-dom';\n\nconst Button = props => /*#__PURE__*/_jsxDEV(\"button\", {\n  onClick: props.handleClick,\n  children: [\" \", props.title, \" \"]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 5,\n  columnNumber: 3\n}, this);\n\n_c = Button;\n\nconst FooterStat = props => /*#__PURE__*/_jsxDEV(\"tr\", {\n  children: [/*#__PURE__*/_jsxDEV(\"td\", {\n    children: [props.title, \" \"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n    children: props.stats\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 5\n  }, this)]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 9,\n  columnNumber: 3\n}, this);\n\n_c2 = FooterStat;\n\nconst Buttons = props => {\n  const incrementValue = (newValue, eventHandler) => {\n    eventHandler(newValue + 1);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Button, {\n      title: \"good\",\n      handleClick: () => incrementValue(props.good, props.setGood)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      title: \"neutral\",\n      handleClick: () => incrementValue(props.neutral, props.setNeutral)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      title: \"bad\",\n      handleClick: () => incrementValue(props.bad, props.setBad)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n};\n\n_c3 = Buttons;\n\nconst FooterStats = ({\n  all,\n  good,\n  neutral,\n  bad\n}) => {\n  if (all === 0) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"No feedback given\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"table\", {\n      children: /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: [/*#__PURE__*/_jsxDEV(FooterStat, {\n          title: \"good\",\n          stats: good\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(FooterStat, {\n          title: \"neutral\",\n          stats: neutral\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(FooterStat, {\n          title: \"bad\",\n          stats: bad\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(FooterStat, {\n          title: \"all\",\n          stats: all\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(FooterStat, {\n          title: \"average\",\n          stats: all ? good - bad / all + \"\" : null\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(FooterStat, {\n          title: \"positive\",\n          stats: all ? good / all * 100 + \"%\" : null\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n};\n\n_c4 = FooterStats;\n\nconst App = () => {\n  _s();\n\n  // save clicks of each button to its own state\n  const [good, setGood] = useState(0);\n  const [neutral, setNeutral] = useState(0);\n  const [bad, setBad] = useState(0);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"give feedback\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Buttons, {\n      good: good,\n      neutral: neutral,\n      bad: bad,\n      setGood: setGood,\n      setNeutral: setNeutral,\n      setBad: setBad\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"statistics\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(FooterStats, {\n      good: good,\n      neutral: neutral,\n      bad: bad\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"eScCFcZxMV7EVTyq8/QmtvFilbs=\");\n\n_c5 = App;\nReactDOM.render( /*#__PURE__*/_jsxDEV(App, {}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 71,\n  columnNumber: 17\n}, this), document.getElementById('root'));\n\nvar _c, _c2, _c3, _c4, _c5;\n\n$RefreshReg$(_c, \"Button\");\n$RefreshReg$(_c2, \"FooterStat\");\n$RefreshReg$(_c3, \"Buttons\");\n$RefreshReg$(_c4, \"FooterStats\");\n$RefreshReg$(_c5, \"App\");","map":{"version":3,"sources":["/Users/ebenezerodubanjo/Documents/fullStackOpen/part1/src/index.js"],"names":["React","useState","ReactDOM","Button","props","handleClick","title","FooterStat","stats","Buttons","incrementValue","newValue","eventHandler","good","setGood","neutral","setNeutral","bad","setBad","FooterStats","all","App","render","document","getElementById"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\nimport ReactDOM from 'react-dom'\n\nconst Button = (props) => (\n  <button onClick={props.handleClick}> {props.title} </button>\n)\n\nconst FooterStat = (props) => (\n  <tr>\n    <td>{props.title} </td>\n    <td>{props.stats}</td>\n  </tr>\n)\n\nconst Buttons = (props) => {\n  const incrementValue = (newValue, eventHandler) => {\n\n    eventHandler(newValue + 1)\n  };\n\n  return (\n    <div>\n      <Button title={\"good\"} handleClick={() => incrementValue(props.good, props.setGood)} />\n      <Button title={\"neutral\"} handleClick={() => incrementValue(props.neutral, props.setNeutral)} />\n      <Button title={\"bad\"} handleClick={() => incrementValue(props.bad, props.setBad)} />\n    </div>)\n}\n\nconst FooterStats = ({ all, good, neutral, bad }) => {\n  if (all === 0) {\n    return (\n      <div>\n        No feedback given\n      </div>\n    )\n  }\n\n  return (\n    <div>\n      <table>\n        <tbody>\n          <FooterStat title=\"good\" stats={good} />\n          <FooterStat title=\"neutral\" stats={neutral} />\n          <FooterStat title=\"bad\" stats={bad} />\n          <FooterStat title=\"all\" stats={all} />\n          <FooterStat title=\"average\" stats={(all) ? (good - bad / all) + \"\" : null} />\n          <FooterStat title=\"positive\" stats={(all) ? (good / all) * 100 + \"%\" : null} />\n        </tbody>\n      </table>\n    </div>\n  )\n}\n\nconst App = () => {\n  // save clicks of each button to its own state\n  const [good, setGood] = useState(0)\n  const [neutral, setNeutral] = useState(0)\n  const [bad, setBad] = useState(0)\n\n  return (\n    <div>\n      <h1>give feedback</h1>\n      <Buttons good={good} neutral={neutral} bad={bad} setGood={setGood} setNeutral={setNeutral} setBad={setBad} />\n\n      <h1>statistics</h1>\n      <FooterStats good={good} neutral={neutral} bad={bad}/>\n    </div>\n  )\n}\n\nReactDOM.render(<App />,\n  document.getElementById('root')\n)\n"]},"metadata":{},"sourceType":"module"}