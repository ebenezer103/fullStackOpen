{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/ebenezerodubanjo/Documents/fullStackOpen/part1/src/index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport ReactDOM from 'react-dom';\n\nconst App = () => {\n  _s();\n\n  // save clicks of each button to its own state\n  const [good, setGood] = useState(0);\n  const [neutral, setNeutral] = useState(0);\n  const [bad, setBad] = useState(0);\n  const all = good + bad + neutral;\n  const total = good - bad;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"give feedback\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Buttons, {\n      good: good,\n      neutral: neutral,\n      bad: bad,\n      setGood: setGood,\n      setNeutral: setNeutral,\n      setBad: setBad\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"statistics\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(FooterStats, {\n      good: good,\n      neutral: neutral,\n      bad: bad,\n      all: all,\n      total: total,\n      good: good\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"eScCFcZxMV7EVTyq8/QmtvFilbs=\");\n\n_c = App;\n\nconst Button = props => /*#__PURE__*/_jsxDEV(\"button\", {\n  onClick: props.handleClick,\n  children: props.title\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 25,\n  columnNumber: 3\n}, this);\n\n_c2 = Button;\n\nconst FooterStat = props => /*#__PURE__*/_jsxDEV(\"p\", {\n  children: [props.title, \" \", props.stats]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 31,\n  columnNumber: 3\n}, this);\n\n_c3 = FooterStat;\n\nconst Buttons = props => {\n  const incrementValue = (newValue, eventHandler) => {\n    eventHandler(newValue + 1);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Button, {\n      title: \"good\",\n      handleClick: () => incrementValue(props.good, props.setGood)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      title: \"neutral\",\n      handleClick: () => incrementValue(props.neutral, props.setNeutral)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      title: \"bad\",\n      handleClick: () => incrementValue(props.bad, props.setBad)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n};\n\n_c4 = Buttons;\n\nconst FooterStats = props => {\n  if (props.all === 0) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"No feedback given\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"table\", {\n      children: /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: [/*#__PURE__*/_jsxDEV(FooterStat, {\n          title: \"good\",\n          stats: props.good\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(FooterStat, {\n          title: \"neutral\",\n          stats: props.neutral\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(FooterStat, {\n          title: \"bad\",\n          stats: props.bad\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(FooterStat, {\n          title: \"all\",\n          stats: props.all\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(FooterStat, {\n          title: \"average\",\n          stats: props.all ? props.total / props.all + \"\" : null\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(FooterStat, {\n          title: \"positive\",\n          stats: props.all ? props.good / props.all * 100 + \"%\" : null\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 5\n  }, this);\n};\n\n_c5 = FooterStats;\nReactDOM.render( /*#__PURE__*/_jsxDEV(App, {}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 75,\n  columnNumber: 17\n}, this), document.getElementById('root'));\n\nvar _c, _c2, _c3, _c4, _c5;\n\n$RefreshReg$(_c, \"App\");\n$RefreshReg$(_c2, \"Button\");\n$RefreshReg$(_c3, \"FooterStat\");\n$RefreshReg$(_c4, \"Buttons\");\n$RefreshReg$(_c5, \"FooterStats\");","map":{"version":3,"sources":["/Users/ebenezerodubanjo/Documents/fullStackOpen/part1/src/index.js"],"names":["React","useState","ReactDOM","App","good","setGood","neutral","setNeutral","bad","setBad","all","total","Button","props","handleClick","title","FooterStat","stats","Buttons","incrementValue","newValue","eventHandler","FooterStats","render","document","getElementById"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\nimport ReactDOM from 'react-dom'\n\nconst App = () => {\n  // save clicks of each button to its own state\n  const [good, setGood] = useState(0)\n  const [neutral, setNeutral] = useState(0)\n  const [bad, setBad] = useState(0)\n\n  const all = (good + bad + neutral);\n  const total = (good - bad);\n\n  return (\n    <div>\n      <h1>give feedback</h1>\n      <Buttons good={good} neutral={neutral} bad={bad} setGood={setGood} setNeutral={setNeutral} setBad={setBad} />\n\n      <h1>statistics</h1>\n      <FooterStats good={good} neutral={neutral} bad={bad} all={all} total={total} good={good} />\n    </div>\n  )\n}\n\nconst Button = (props) => (\n  <button onClick={props.handleClick}>\n    {props.title}\n  </button>\n)\n\nconst FooterStat = (props) => (\n  <p>{props.title} {props.stats}</p>\n)\n\nconst Buttons = (props) => {\n  const incrementValue = (newValue, eventHandler) => {\n\n    eventHandler(newValue + 1)\n  };\n\n  return (\n    <div>\n      <Button title={\"good\"} handleClick={() => incrementValue(props.good, props.setGood)} />\n      <Button title={\"neutral\"} handleClick={() => incrementValue(props.neutral, props.setNeutral)} />\n      <Button title={\"bad\"} handleClick={() => incrementValue(props.bad, props.setBad)} />\n    </div>)\n}\n\nconst FooterStats = (props) => {\n  if (props.all === 0) {\n    return (\n      <div>\n        No feedback given\n      </div>\n    )\n  }\n\n  return (\n    <div>\n      <table>\n        <tbody>\n          <FooterStat title=\"good\" stats={props.good} />\n          <FooterStat title=\"neutral\" stats={props.neutral} />\n          <FooterStat title=\"bad\" stats={props.bad} />\n\n          <FooterStat title=\"all\" stats={props.all} />\n          <FooterStat title=\"average\" stats={(props.all) ? (props.total / props.all) + \"\" : null} />\n          <FooterStat title=\"positive\" stats={(props.all) ? (props.good / props.all) * 100 + \"%\" : null} />\n        </tbody>\n      </table>\n\n    </div>\n  )\n}\n\nReactDOM.render(<App />,\n  document.getElementById('root')\n)\n"]},"metadata":{},"sourceType":"module"}