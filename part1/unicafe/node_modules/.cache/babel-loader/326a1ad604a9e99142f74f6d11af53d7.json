{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/ebenezerodubanjo/Documents/fullStackOpen/part1/src/index.js\",\n    _s = $RefreshSig$();\n\nimport { render } from '@testing-library/react';\nimport React, { useState } from 'react';\nimport ReactDOM from 'react-dom';\n\nconst App = () => {\n  _s();\n\n  // save clicks of each button to its own state\n  const [good, setGood] = useState(0);\n  const [neutral, setNeutral] = useState(0);\n  const [bad, setBad] = useState(0);\n\n  const incrementValue = (newValue, eventHandler) => {\n    eventHandler(newValue + 1);\n  };\n\n  const all = good + bad + neutral;\n  const total = good - bad;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"give feedback\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      title: \"good\",\n      handleClick: () => incrementValue(good, setGood)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      title: \"neutral\",\n      handleClick: () => incrementValue(neutral, setNeutral)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      title: \"bad\",\n      handleClick: () => incrementValue(bad, setBad)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"statistics\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Statistics, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(NewFooterStats, {\n      title: \"all\",\n      value: all\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(NewFooterStats, {\n      title: \"average\",\n      value: all ? total / all + \"\" : null\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(NewFooterStats, {\n      title: \"positive\",\n      value: all ? good / all * 100 + \"%\" : null\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"eScCFcZxMV7EVTyq8/QmtvFilbs=\");\n\n_c = App;\n\nconst Statistics = props => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(FooterStat, {\n      title: \"good\",\n      stats: good\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(FooterStat, {\n      title: \"neutral\",\n      stats: neutral\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(FooterStat, {\n      title: \"bad\",\n      stats: bad\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n};\n\n_c2 = Statistics;\n\nconst Button = props => /*#__PURE__*/_jsxDEV(\"button\", {\n  onClick: props.handleClick,\n  children: props.title\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 54,\n  columnNumber: 3\n}, this);\n\n_c3 = Button;\n\nconst FooterStat = props => /*#__PURE__*/_jsxDEV(\"p\", {\n  children: [props.title, \" \", props.stats]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 60,\n  columnNumber: 3\n}, this);\n\n_c4 = FooterStat;\n\nconst NewFooterStats = props => {\n  if (props.value === 0) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No feedback given\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this);\n  } else if (props.value === null) {\n    return null;\n  } else {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [props.title, \" \", props.value]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this);\n  }\n};\n\n_c5 = NewFooterStats;\nReactDOM.render( /*#__PURE__*/_jsxDEV(App, {}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 78,\n  columnNumber: 17\n}, this), document.getElementById('root'));\n\nvar _c, _c2, _c3, _c4, _c5;\n\n$RefreshReg$(_c, \"App\");\n$RefreshReg$(_c2, \"Statistics\");\n$RefreshReg$(_c3, \"Button\");\n$RefreshReg$(_c4, \"FooterStat\");\n$RefreshReg$(_c5, \"NewFooterStats\");","map":{"version":3,"sources":["/Users/ebenezerodubanjo/Documents/fullStackOpen/part1/src/index.js"],"names":["render","React","useState","ReactDOM","App","good","setGood","neutral","setNeutral","bad","setBad","incrementValue","newValue","eventHandler","all","total","Statistics","props","Button","handleClick","title","FooterStat","stats","NewFooterStats","value","document","getElementById"],"mappings":"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","sourcesContent":["import { render } from '@testing-library/react'\nimport React, { useState } from 'react'\nimport ReactDOM from 'react-dom'\n\nconst App = () => {\n  // save clicks of each button to its own state\n  const [good, setGood] = useState(0)\n  const [neutral, setNeutral] = useState(0)\n  const [bad, setBad] = useState(0)\n\n  const incrementValue = (newValue, eventHandler) => {\n\n    eventHandler(newValue + 1)\n  };\n\n  const all = (good + bad + neutral);\n  const total = (good - bad);\n\n  return (\n    <div>\n      <h1>give feedback</h1>\n      <Button title={\"good\"} handleClick={() => incrementValue(good, setGood)} />\n\n      <Button title={\"neutral\"} handleClick={() => incrementValue(neutral, setNeutral)} />\n\n      <Button title={\"bad\"} handleClick={() => incrementValue(bad, setBad)} />\n\n      <h1>statistics</h1>\n      <Statistics />\n      {/* <FooterStat title=\"good\" stats={good} />\n      <FooterStat title=\"neutral\" stats={neutral} />\n      <FooterStat title=\"bad\" stats={bad} /> */}\n\n      <NewFooterStats title=\"all\" value={all} />\n      <NewFooterStats title=\"average\" value={(all) ? (total / all) + \"\" : null} />\n\n      <NewFooterStats title=\"positive\" value={(all) ? (good / all) * 100 + \"%\" : null} />\n\n    </div>\n  )\n}\n\nconst Statistics = (props) => {\n  return(\n    <div>\n      <FooterStat title=\"good\" stats={good} />\n      <FooterStat title=\"neutral\" stats={neutral} />\n      <FooterStat title=\"bad\" stats={bad} />\n    </div>\n  )\n}\n\nconst Button = (props) => (\n  <button onClick={props.handleClick}>\n    {props.title}\n  </button>\n)\n\nconst FooterStat = (props) => (\n  <p>{props.title} {props.stats}</p>\n)\n\nconst NewFooterStats = (props) => {\n  if (props.value === 0) {\n    return (\n      <p>No feedback given</p>\n    )\n  } else if (props.value === null) {\n    return(null)\n  }\n  else {\n    return (\n      <p>{props.title} {props.value}</p>\n    )\n  }\n}\n\nReactDOM.render(<App />,\n  document.getElementById('root')\n)\n"]},"metadata":{},"sourceType":"module"}